on:
  push:
    branches:
      - master

name: Build and Deploy

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: install Clojure cli
        id: install-clojure-cli
        run: curl -O https://download.clojure.org/install/linux-install-1.10.1.462.sh && chmod +x linux-install-1.10.1.462.sh && sudo ./linux-install-1.10.1.462.sh

      - name: Build Production CLJS
        id: prod-cljs
        run: |
          rm -rf resources/public/js
          clojure -m cljs.main -O advanced \
            -o "resources/public/js/app.js" \
            -co "{:closure-defines
                  {goog.DEBUG false
                   openmind.config/s3-bucket \"openmind-datastore-bucket-1\"}}" \
            -c openmind.core

      - name: build uberjar
        id: uberjar
        run: clojure -A:uberjar -e '(println "success")'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      # FIXME: Fix tests once deployment is back up.

      # - name: tests
      #   id: unit-tests
      #   env:
      #     S3_DATA_BUCKET: "test-data-17623"
      #   run: dev/test.sh

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: openmind
          IMAGE_TAG: ${{ github.sha }}
        run: |
            # Build a docker container and
            # push it to ECR so that it can
            # be deployed to ECS.
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

